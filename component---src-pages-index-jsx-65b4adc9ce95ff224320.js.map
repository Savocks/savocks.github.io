{"version":3,"file":"component---src-pages-index-jsx-65b4adc9ce95ff224320.js","mappings":"ivBAAO,IAAMA,EAA0B,SAACC,GAAD,OAAWA,EAAA,KAAU,gBAAEC,EAAF,cAAeC,EAAf,+BAA8CA,QAAAA,QAC7FC,EAAkB,SAAC,GAAwB,IAAvBF,EAAuB,EAAvBA,YAAaG,EAAU,EAAVA,KAE5C,OADAC,QAAAA,IAAAA,GACA,cAAyBD,KAAAA,M,0KCGrBE,EAAUC,EAAAA,QAAAA,QAAAA,WAAH,gEAAGA,CAAH,yGASPC,EAAcD,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,uFAEK,SAAAE,GAAK,OAAIA,EAAMC,UAAY,MAAQ,YAK1C,SAASC,EAAT,GAA0D,IAAnCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KACzDC,GAAQC,EAAAA,EAAAA,KACRP,GAAYQ,EAAAA,EAAAA,GAAcF,EAAMG,YAAYC,GAAG,MAAO,CAAEC,OAAO,IACrE,OACE,gBAACf,EAAD,KACE,gBAAC,KAAD,KAAUO,GACV,gBAACS,EAAA,EAAD,CAAYC,GAAI,CAACC,cAAe,aAAcC,UAAU,KAAKC,WAAW,KAAKC,MAAM,WAChFd,GAEH,gBAACL,EAAD,CAAaE,UAAWA,GACtB,gBAACY,EAAA,EAAD,CAAYC,GAAI,CACdK,KAAMlB,EAAY,UAAY,WAC9BmB,GAAInB,EAAW,EAAI,SAClBoB,WAAS,GACThB,GAEH,gBAACiB,EAAA,EAAD,CAAKR,GAAI,CACPK,KAAMlB,EAAY,UAAY,WAC9BsB,MAAOtB,EAAY,MAAQ,OAC3BuB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAEhB,gBAAC,KAAD,CACEZ,GAAI,CACFS,MAAOtB,EAAY,MAAQ,QAE7B0B,QAAQ,WACRT,MAAM,UACNU,GAAItB,GANN,SAOYH,MC7CP,SAAS0B,EAAT,GAA4B,IAAPC,EAAO,EAAPA,KAC5BC,GAAWzC,EAAAA,EAAAA,GAAwBwC,EAAKE,OAAOzC,OACrD,OACE,gCACE,gBAAC0C,EAAA,EAAD,KACE,qDACA,gBAACX,EAAA,EAAD,CACEN,UAAU,UACVkB,UAAU,UACVpB,GAAI,CACFS,MAAO,OACPY,OAAQ,QACRC,UAAW,SACXZ,QAAS,OACTa,cAAe,SACfZ,WAAY,SACZC,eAAgB,WAElB,gBAACb,EAAA,EAAD,CAAYG,UAAU,KAAKC,WAAW,MAAtC,yBAGA,gBAACJ,EAAA,EAAD,CAAYG,UAAU,KAAKC,WAAW,KAAKC,MAAM,WAAjD,wCAGA,gBAACL,EAAA,EAAD,CAAYQ,WAAS,EAACJ,WAAW,UAAjC,qFAKAc,EAASO,KAAI,gBAAEnC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,QAASC,EAA7B,EAA6BA,KAA7B,OACX,gBAACJ,EAAD,CAAaC,UAAWA,EAAWG,KAAMA,EAAMF,MAAOA,EAAOC,QAASA","sources":["webpack://savocks/./src/utils/utils.js","webpack://savocks/./src/components/HomeSection.jsx","webpack://savocks/./src/pages/index.jsx"],"sourcesContent":["export const getFrontmatterFromNodes = (nodes) => nodes.map(({frontmatter, excerpt}) => ({...frontmatter, excerpt}))\r\nexport const getMDXFromNodes = ({frontmatter, body}) => {\r\n  console.log(body);\r\n  return ({...frontmatter, body})\r\n}\r\n","import React from 'react';\nimport { BigText } from \"./index\";\nimport { Box, Typography, useMediaQuery, useTheme } from \"@mui/material\";\nimport { Button } from \"gatsby-theme-material-ui\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.section`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst SectionBody = styled.div`\n    display: flex;\n    flex-direction: ${props => props.isDesktop ? \"row\" : \"column\"};\n    align-items: center;\n    justify-content: space-between;\n`;\n\nexport default function HomeSection({ pageTitle, title, caption, link }) {\n  const theme = useTheme();\n  const isDesktop = useMediaQuery(theme.breakpoints.up('md'), { noSsr: true });\n  return (\n    <Wrapper>\n      <BigText>{title}</BigText>\n      <Typography sx={{textTransform: 'uppercase'}} component=\"h2\" typography=\"h2\" color=\"primary\">\n        {title}\n      </Typography>\n      <SectionBody isDesktop={isDesktop}>\n        <Typography sx={{\n          flex: isDesktop ? '1 1 50%' : '1 1 100%',\n          my: isDesktop? 0 : '1.5em'\n        }} paragraph>\n          {caption}\n        </Typography>\n        <Box sx={{\n          flex: isDesktop ? '1 1 50%' : '1 1 100%',\n          width: isDesktop ? '50%' : '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n          <Button\n            sx={{\n              width: isDesktop ? '50%' : '100%'\n            }}\n            variant=\"outlined\"\n            color=\"primary\"\n            to={link}>\n            {`Go to ${pageTitle}`}\n          </Button>\n        </Box>\n      </SectionBody>\n    </Wrapper>\n\n  );\n}\n","import React from 'react';\r\nimport Layout from \"../layout/Layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport { getFrontmatterFromNodes } from \"../utils/utils\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport HomeSection from \"../components/HomeSection\";\r\n\r\nexport default function IndexPage ({data}) {\r\n  const sections = getFrontmatterFromNodes(data.allMdx.nodes);\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <title>Giulio Savoca | Home</title>\r\n        <Box\r\n          component=\"section\"\r\n          className=\"section\"\r\n          sx={{\r\n            width: '100%',\r\n            height: '100vh',\r\n            textAlign: 'center',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n          }}>\r\n          <Typography component=\"h1\" typography=\"h1\">\r\n            Hi, I'm Giulio Savoca\r\n          </Typography>\r\n          <Typography component=\"h2\" typography=\"h2\" color=\"primary\">\r\n            I master the arcane magic of the web\r\n          </Typography>\r\n          <Typography paragraph typography=\"button\">\r\n            Frontend developer | 5+ years of experience | JavaScript, Angular, React, NodeJs\r\n          </Typography>\r\n        </Box>\r\n        {\r\n          sections.map(({pageTitle, title, caption, link }) => (\r\n            <HomeSection pageTitle={pageTitle} link={link} title={title} caption={caption} />\r\n          ))\r\n        }\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const query = graphql`\r\nquery {\r\n    allMdx(sort: {fields: frontmatter___id, order: ASC}) {\r\n    nodes {\r\n      frontmatter {\r\n        caption\r\n        link\r\n        pageTitle\r\n        subTitle\r\n        title\r\n      }\r\n      excerpt\r\n    }\r\n  }\r\n}`\r\n"],"names":["getFrontmatterFromNodes","nodes","frontmatter","excerpt","getMDXFromNodes","body","console","Wrapper","styled","SectionBody","props","isDesktop","HomeSection","pageTitle","title","caption","link","theme","useTheme","useMediaQuery","breakpoints","up","noSsr","Typography","sx","textTransform","component","typography","color","flex","my","paragraph","Box","width","display","alignItems","justifyContent","variant","to","IndexPage","data","sections","allMdx","Layout","className","height","textAlign","flexDirection","map"],"sourceRoot":""}